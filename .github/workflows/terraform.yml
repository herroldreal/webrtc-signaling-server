name: 'Terraform'

on:
  push:
    branches: [ "main", "staging" ]
  pull_request:
    branches: [ "main", "staging" ]

env:
  tf_actions_working_dir: .infra
  TF_VAR_app_env: 'staging'
  TF_VAR_app_region: 'us-east-1'
  TF_VAR_app_name: 'cooltravels-backend'
  TF_VAR_database_password: ${{ secrets.DB_AUTH_PASSWORD }}
  TF_VAR_database_name: ${{ secrets.DB_AUTH_USER }}
  TF_VAR_vpc_id: ${{ secrets.VPC_ID }}
  TF_VAR_subnets_ids: ${{ secrets.SUBNETS_IDS }}
permissions:
  pull-requests: write
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        working-directory: ${{ env.tf_actions_working_dir }}
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - run: echo ${{ secrets.TF_API_TOKEN }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        id: init
        env:
          TF_VAR_region_name: 'us-east-1'
          TF_VAR_aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
          TF_VAR_aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -input=true
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        id: apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false
